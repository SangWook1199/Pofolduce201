<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.kosa._musketeers.mapper.PortfolioMapper">
	<resultMap id="portfolioMap"
		type="org.kosa._musketeers.domain.Portfolio">
		<id property="portfolioId" column="portfolio_id" />
		<result property="portfolioName" column="portfolio_name" />
		<result property="fileLocation" column="file_location" />
		<result property="uploadDate" column="upload_date" />
		<association property="userId"
			javaType="org.kosa._musketeers.domain.User">
			<id property="userId" column="user_id" />
			<result property="nickname" column="nickname" />
			<result property="email" column="email" />
		</association>
	</resultMap>

	<insert id="createPortfolio"
		parameterType="org.kosa._musketeers.domain.Portfolio"
		useGeneratedKeys="true" keyProperty="portfolioId">
		INSERT INTO portfolio
		(portfolio_name, user_id)
		VALUES (#{portfolioName}, #{userId.userId})
	</insert>

	<select id="getPortfolio" parameterType="int"
		resultMap="portfolioMap">
		SELECT p.*, u.user_id, u.nickname, u.email
		FROM portfolio p
		JOIN users u ON p.user_id = u.user_id
		WHERE p.portfolio_id =
		#{portfolioId}
	</select>
	<select id="getPortfolioById" parameterType="int"
		resultType="int">
		SELECT portfolio_id
		FROM portfolio
		WHERE user_id =
		#{userId}
	</select>

	<select id="getPortfolioList" parameterType="int"
		resultType="org.kosa._musketeers.domain.Portfolio">
		SELECT p.portfolio_id AS portfolioId,
		p.portfolio_name AS
		portfolioName,
		p.user_id AS userId,
		r.portfolio_id AS repPortfolioId
		FROM portfolio p
		LEFT JOIN rep_portfolio r
		ON p.portfolio_id =
		r.portfolio_id AND r.user_id = #{userId}
		WHERE p.user_id = #{userId}
		ORDER BY
		CASE WHEN r.portfolio_id IS NOT NULL THEN 0 ELSE 1 END,
		p.upload_date DESC
	</select>
	<select id="getRepPortfolio" parameterType="int"
		resultType="int">
		SELECT portfolio_id
		FROM rep_portfolio
		WHERE user_id =
		#{userId}
	</select>
	<update id="updateRepPortfolio" parameterType="map">
		UPDATE
		rep_portfolio
		SET portfolio_id = #{portfolioId}
		WHERE user_id =
		#{userId}
	</update>
	<insert id="setRepPortfolio" parameterType="map">
		INSERT INTO
		rep_portfolio(user_id, portfolio_id)
		VALUES (#{userId}, #{portfolioId})
	</insert>
	<delete id="deletePortfolio" parameterType="int">
		DELETE FROM portfolio
		WHERE portfolio_id = #{portfolioId}
	</delete>
</mapper>